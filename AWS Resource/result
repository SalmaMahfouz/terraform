iac-server $ terraform plan
Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.


------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eip.eip will be created
  + resource "aws_eip" "eip" {
  	+ allocation_id    	= (known after apply)
  	+ association_id   	= (known after apply)
  	+ carrier_ip       	= (known after apply)
  	+ customer_owned_ip	= (known after apply)
  	+ domain           	= (known after apply)
  	+ id               	= (known after apply)
  	+ instance         	= (known after apply)
  	+ network_border_group = (known after apply)
  	+ network_interface	= (known after apply)
  	+ private_dns      	= (known after apply)
  	+ private_ip       	= (known after apply)
  	+ public_dns       	= (known after apply)
  	+ public_ip        	= (known after apply)
  	+ public_ipv4_pool 	= (known after apply)
  	+ tags_all         	= (known after apply)
  	+ vpc              	= (known after apply)
	}

  # aws_instance.citadel will be created
  + resource "aws_instance" "citadel" {
  	+ ami                              	= "ami-06178cf087598769c"
  	+ arn                              	= (known after apply)
  	+ associate_public_ip_address      	= (known after apply)
  	+ availability_zone                	= (known after apply)
  	+ cpu_core_count                   	= (known after apply)
  	+ cpu_threads_per_core             	= (known after apply)
  	+ disable_api_termination          	= (known after apply)
  	+ ebs_optimized                    	= (known after apply)
  	+ get_password_data                	= false
  	+ host_id                          	= (known after apply)
  	+ id                               	= (known after apply)
  	+ instance_initiated_shutdown_behavior = (known after apply)
  	+ instance_state                   	= (known after apply)
  	+ instance_type                    	= "m5.large"
  	+ ipv6_address_count               	= (known after apply)
  	+ ipv6_addresses                   	= (known after apply)
  	+ key_name                         	= "citadel"
  	+ monitoring                       	= (known after apply)
  	+ outpost_arn                      	= (known after apply)
  	+ password_data                    	= (known after apply)
  	+ placement_group                  	= (known after apply)
  	+ placement_partition_number       	= (known after apply)
  	+ primary_network_interface_id     	= (known after apply)
  	+ private_dns                      	= (known after apply)
  	+ private_ip                       	= (known after apply)
  	+ public_dns                       	= (known after apply)
  	+ public_ip                        	= (known after apply)
  	+ secondary_private_ips            	= (known after apply)
  	+ security_groups                  	= (known after apply)
  	+ source_dest_check                	= true
  	+ subnet_id                        	= (known after apply)
  	+ tags_all                         	= (known after apply)
  	+ tenancy                          	= (known after apply)
  	+ user_data                        	= "1751b4ee8cedb2fb6bfa764f0587ac7c4e76c779"
  	+ user_data_base64                 	= (known after apply)
  	+ user_data_replace_on_change      	= false
  	+ vpc_security_group_ids           	= (known after apply)

  	+ capacity_reservation_specification {
      	+ capacity_reservation_preference = (known after apply)

      	+ capacity_reservation_target {
          	+ capacity_reservation_id             	= (known after apply)
          	+ capacity_reservation_resource_group_arn = (known after apply)
        	}
    	}

  	+ ebs_block_device {
      	+ delete_on_termination = (known after apply)
      	+ device_name       	= (known after apply)
      	+ encrypted         	= (known after apply)
      	+ iops              	= (known after apply)
      	+ kms_key_id        	= (known after apply)
      	+ snapshot_id       	= (known after apply)
      	+ tags              	= (known after apply)
      	+ throughput        	= (known after apply)
      	+ volume_id         	= (known after apply)
      	+ volume_size       	= (known after apply)
      	+ volume_type       	= (known after apply)
    	}

  	+ enclave_options {
      	+ enabled = (known after apply)
    	}

  	+ ephemeral_block_device {
      	+ device_name  = (known after apply)
      	+ no_device	= (known after apply)
      	+ virtual_name = (known after apply)
    	}

  	+ maintenance_options {
      	+ auto_recovery = (known after apply)
    	}

  	+ metadata_options {
      	+ http_endpoint           	= (known after apply)
      	+ http_put_response_hop_limit = (known after apply)
      	+ http_tokens             	= (known after apply)
      	+ instance_metadata_tags  	= (known after apply)
    	}

  	+ network_interface {
      	+ delete_on_termination = (known after apply)
      	+ device_index      	= (known after apply)
      	+ network_card_index	= (known after apply)
      	+ network_interface_id  = (known after apply)
    	}

  	+ root_block_device {
      	+ delete_on_termination = (known after apply)
      	+ device_name       	= (known after apply)
      	+ encrypted         	= (known after apply)
      	+ iops              	= (known after apply)
      	+ kms_key_id        	= (known after apply)
      	+ tags              	= (known after apply)
      	+ throughput        	= (known after apply)
      	+ volume_id         	= (known after apply)
      	+ volume_size       	= (known after apply)
      	+ volume_type       	= (known after apply)
    	}
	}

  # aws_key_pair.citadel-key will be created
  + resource "aws_key_pair" "citadel-key" {
  	+ arn         	= (known after apply)
  	+ fingerprint 	= (known after apply)
  	+ id          	= (known after apply)
  	+ key_name    	= "citadel"
  	+ key_name_prefix = (known after apply)
  	+ key_pair_id 	= (known after apply)
  	+ public_key  	= "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT1/jXZwAo3wchLq+ypPLyd7j0gCBjGkRFVuKGoMy6rE7875RA3r66BkK/r0elJUX8X19wRsGkURAN1avl2Hyd6JwTomMCdmfaMvi4IjeS6uoG+qPVCV0/YeNND3ok79Pv3yVQjpZGIB/Z+Fo3VMZaBzZ9WYgCHcNwbr6R+aESqVVSlshw+1SNxVfOSsMaA/+imtjloHYH8vILVIgmjD0KlZPSzdeYRGSKeePSFs5hEvTxXOwk/WPbYOYz8Y3SFBIki7KHn3jdNUCi9LuuUjiXV+e/R4glTGAt7Yt/9ShyXlCGJToVGUjRtc9GAzwKPBYowXTt7JfNNX7XT485ZEUL root@iac-server"
  	+ tags_all    	= (known after apply)
	}

Plan: 3 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

iac-server $


iac-server $ terraform apply

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eip.eip will be created
  + resource "aws_eip" "eip" {
  	+ allocation_id    	= (known after apply)
  	+ association_id   	= (known after apply)
  	+ carrier_ip       	= (known after apply)
  	+ customer_owned_ip	= (known after apply)
  	+ domain           	= (known after apply)
  	+ id               	= (known after apply)
  	+ instance         	= (known after apply)
  	+ network_border_group = (known after apply)
  	+ network_interface	= (known after apply)
  	+ private_dns      	= (known after apply)
  	+ private_ip       	= (known after apply)
  	+ public_dns       	= (known after apply)
  	+ public_ip        	= (known after apply)
  	+ public_ipv4_pool 	= (known after apply)
  	+ tags_all         	= (known after apply)
  	+ vpc              	= (known after apply)
	}

  # aws_instance.citadel will be created
  + resource "aws_instance" "citadel" {
  	+ ami                              	= "ami-06178cf087598769c"
  	+ arn                              	= (known after apply)
  	+ associate_public_ip_address      	= (known after apply)
  	+ availability_zone                	= (known after apply)
  	+ cpu_core_count                   	= (known after apply)
  	+ cpu_threads_per_core             	= (known after apply)
  	+ disable_api_termination          	= (known after apply)
  	+ ebs_optimized                    	= (known after apply)
  	+ get_password_data                	= false
  	+ host_id                          	= (known after apply)
  	+ id                               	= (known after apply)
  	+ instance_initiated_shutdown_behavior = (known after apply)
  	+ instance_state                   	= (known after apply)
  	+ instance_type                    	= "m5.large"
  	+ ipv6_address_count               	= (known after apply)
  	+ ipv6_addresses                   	= (known after apply)
  	+ key_name                         	= "citadel"
  	+ monitoring                       	= (known after apply)
  	+ outpost_arn                      	= (known after apply)
  	+ password_data                    	= (known after apply)
  	+ placement_group                  	= (known after apply)
  	+ placement_partition_number       	= (known after apply)
  	+ primary_network_interface_id     	= (known after apply)
  	+ private_dns                      	= (known after apply)
  	+ private_ip                       	= (known after apply)
  	+ public_dns                       	= (known after apply)
  	+ public_ip                        	= (known after apply)
  	+ secondary_private_ips            	= (known after apply)
  	+ security_groups                  	= (known after apply)
  	+ source_dest_check                	= true
  	+ subnet_id                        	= (known after apply)
  	+ tags_all                         	= (known after apply)
  	+ tenancy                          	= (known after apply)
  	+ user_data                        	= "1751b4ee8cedb2fb6bfa764f0587ac7c4e76c779"
  	+ user_data_base64                 	= (known after apply)
  	+ user_data_replace_on_change      	= false
  	+ vpc_security_group_ids           	= (known after apply)

  	+ capacity_reservation_specification {
      	+ capacity_reservation_preference = (known after apply)

      	+ capacity_reservation_target {
          	+ capacity_reservation_id             	= (known after apply)
          	+ capacity_reservation_resource_group_arn = (known after apply)
        	}
    	}

  	+ ebs_block_device {
      	+ delete_on_termination = (known after apply)
      	+ device_name       	= (known after apply)
      	+ encrypted         	= (known after apply)
      	+ iops              	= (known after apply)
      	+ kms_key_id        	= (known after apply)
      	+ snapshot_id       	= (known after apply)
      	+ tags              	= (known after apply)
      	+ throughput        	= (known after apply)
      	+ volume_id         	= (known after apply)
      	+ volume_size       	= (known after apply)
      	+ volume_type       	= (known after apply)
    	}

  	+ enclave_options {
      	+ enabled = (known after apply)
    	}

  	+ ephemeral_block_device {
      	+ device_name  = (known after apply)
      	+ no_device	= (known after apply)
      	+ virtual_name = (known after apply)
    	}

  	+ maintenance_options {
      	+ auto_recovery = (known after apply)
    	}

  	+ metadata_options {
      	+ http_endpoint           	= (known after apply)
      	+ http_put_response_hop_limit = (known after apply)
      	+ http_tokens             	= (known after apply)
      	+ instance_metadata_tags  	= (known after apply)
    	}

  	+ network_interface {
      	+ delete_on_termination = (known after apply)
      	+ device_index      	= (known after apply)
      	+ network_card_index	= (known after apply)
      	+ network_interface_id  = (known after apply)
    	}

  	+ root_block_device {
      	+ delete_on_termination = (known after apply)
      	+ device_name       	= (known after apply)
      	+ encrypted         	= (known after apply)
      	+ iops              	= (known after apply)
      	+ kms_key_id        	= (known after apply)
      	+ tags              	= (known after apply)
      	+ throughput        	= (known after apply)
      	+ volume_id         	= (known after apply)
      	+ volume_size       	= (known after apply)
      	+ volume_type       	= (known after apply)
    	}
	}

  # aws_key_pair.citadel-key will be created
  + resource "aws_key_pair" "citadel-key" {
  	+ arn         	= (known after apply)
  	+ fingerprint 	= (known after apply)
  	+ id          	= (known after apply)
  	+ key_name    	= "citadel"
  	+ key_name_prefix = (known after apply)
  	+ key_pair_id 	= (known after apply)
  	+ public_key  	= "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDT1/jXZwAo3wchLq+ypPLyd7j0gCBjGkRFVuKGoMy6rE7875RA3r66BkK/r0elJUX8X19wRsGkURAN1avl2Hyd6JwTomMCdmfaMvi4IjeS6uoG+qPVCV0/YeNND3ok79Pv3yVQjpZGIB/Z+Fo3VMZaBzZ9WYgCHcNwbr6R+aESqVVSlshw+1SNxVfOSsMaA/+imtjloHYH8vILVIgmjD0KlZPSzdeYRGSKeePSFs5hEvTxXOwk/WPbYOYz8Y3SFBIki7KHn3jdNUCi9LuuUjiXV+e/R4glTGAt7Yt/9ShyXlCGJToVGUjRtc9GAzwKPBYowXTt7JfNNX7XT485ZEUL root@iac-server"
  	+ tags_all    	= (known after apply)
	}

Plan: 3 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_key_pair.citadel-key: Creating...
aws_key_pair.citadel-key: Creation complete after 1s [id=citadel]
aws_instance.citadel: Creating...
aws_instance.citadel: Still creating... [10s elapsed]
aws_instance.citadel: Creation complete after 10s [id=i-f8022b0e6432610d9]
aws_eip.eip: Creating...
aws_eip.eip: Provisioning with 'local-exec'...
aws_eip.eip (local-exec): Executing: ["/bin/sh" "-c" "echo ec2-127-181-196-28.eu-west-2.compute.amazonaws.com >> /root/citadel_public_dns.txt"]
aws_eip.eip: Creation complete after 0s [id=eipalloc-a827a219]

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.
iac-server $

iac-server $ ls
citadel_public_dns.txt  terraform-challenges
iac-server $ cat citadel_public_dns.txt
ec2-127-181-196-28.eu-west-2.compute.amazonaws.com
